
/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:

    Mux8Way16(sel[0] = reset, sel[1] = load, sel[2] = inc,
              a = prev,                 /* 000 */
              b = false,                /* 001 */
              c = in,                   /* 010 */
              d = false,                /* 011 */
              e = oneplus,              /* 100 */
              f = false,                /* 101 */
              g = in,                   /* 110 */
              h = false,                /* 111 */
              out = nextval);

    Inc16(in = prev, out = oneplus);

    Or(a = reset, b = load, out = l0);
    Or(a = l0, b = inc, out = l1);
    
    /* one can use load = true as well */
    Register(in = nextval, load = l1, out = out, out = prev);

    @instrument-reg-pc out;

}
